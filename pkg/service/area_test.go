package service

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"go.uber.org/zap"
	"jiujia/config"
	"jiujia/pkg/http"
)

func TestArea(t *testing.T) {
	cfg := config.Config{
		TK:         "",
		MemberID:   "",
		IDCard:     "",
		RegionCode: "",
		Cookie:     "",
	}
	config.C = &cfg
	http.InitClient("", true)
	logger := zap.L()
	s := New(cfg, logger)
	res, err := s.GetArea("51")
	assert.NoError(t, err)
	assert.NotEmpty(t, res)
}

func TestService_GetAllArea(t *testing.T) {
	// mapArea  := map[string]struct{}{}
	// allArea := []int{110101, 110102, 110105, 110106, 110107, 110108, 110109, 110111, 110112, 110113, 110114, 110115, 110116, 110117, 110118, 110119, 120101, 120102, 120103, 120104, 120105, 120106, 120110, 120111, 120112, 120113, 120114, 120115, 120116, 120117, 120118, 120225, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1390, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1522, 1525, 1529, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2224, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2327, 310101, 310104, 310105, 310106, 310107, 310109, 310110, 310112, 310113, 310114, 310115, 310116, 310117, 310118, 310120, 310151, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3410, 3411, 3412, 3413, 3415, 3416, 3417, 3418, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3713, 3714, 3715, 3716, 3717, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4190, 4201, 4202, 4203, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4228, 4290, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4331, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4451, 4452, 4453, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4601, 4602, 4603, 4690, 500101, 500102, 500103, 500104, 500105, 500106, 500107, 500108, 500109, 500110, 500111, 500112, 500113, 500114, 500115, 500116, 500117, 500118, 500119, 500120, 500151, 500152, 500153, 500154, 500155, 500229, 500230, 500231, 500232, 500233, 500234, 500235, 500236, 500237, 500238, 500240, 500241, 500242, 500243, 5101, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5113, 5114, 5115, 5116, 5117, 5118, 5119, 5120, 5132, 5133, 5134, 5201, 5202, 5203, 5204, 5205, 5206, 5223, 5226, 5227, 5301, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5323, 5325, 5326, 5328, 5329, 5331, 5333, 5334, 5401, 5402, 5403, 5404, 5422, 5424, 5425, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6229, 6230, 6301, 6302, 6322, 6323, 6325, 6326, 6327, 6328, 6401, 6402, 6403, 6404, 6405, 6501, 6502, 6504, 6522, 6523, 6527, 6528, 6529, 6530, 6531, 6532, 6540, 6542, 6543, 6590, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 8101, 8201}
	// for _, area := range  allArea {
	// 	if len(strconv.Itoa(area)) > 4 {
	// 		mapArea[strconv.Itoa(area)[:4]] = struct{}{}
	// 	} else {
	// 		mapArea[strconv.Itoa(area)] = struct{}{}
	// 	}
	//
	// }
	// var result []string
	// for k, _ := range mapArea {
	// 	result = append(result, k)
	// }
	// t.Log(result)
}
